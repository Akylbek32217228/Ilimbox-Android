// Generated by view binder compiler. Do not edit!
package ilimboxAndroid.bphc.ilimbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import ilimboxAndroid.bphc.ilimbox.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DownloadsFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final CoordinatorLayout downloadsCoordinator;

  @NonNull
  public final RecyclerView downloadsRecycler;

  @NonNull
  public final CircularProgressIndicator filesProgress;

  @NonNull
  public final TextView noFilesText;

  private DownloadsFragmentBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ConstraintLayout constraintLayout, @NonNull CoordinatorLayout downloadsCoordinator,
      @NonNull RecyclerView downloadsRecycler, @NonNull CircularProgressIndicator filesProgress,
      @NonNull TextView noFilesText) {
    this.rootView = rootView;
    this.constraintLayout = constraintLayout;
    this.downloadsCoordinator = downloadsCoordinator;
    this.downloadsRecycler = downloadsRecycler;
    this.filesProgress = filesProgress;
    this.noFilesText = noFilesText;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DownloadsFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DownloadsFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.downloads_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DownloadsFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = rootView.findViewById(id);
      if (constraintLayout == null) {
        break missingId;
      }

      CoordinatorLayout downloadsCoordinator = (CoordinatorLayout) rootView;

      id = R.id.downloads_recycler;
      RecyclerView downloadsRecycler = rootView.findViewById(id);
      if (downloadsRecycler == null) {
        break missingId;
      }

      id = R.id.files_progress;
      CircularProgressIndicator filesProgress = rootView.findViewById(id);
      if (filesProgress == null) {
        break missingId;
      }

      id = R.id.no_files_text;
      TextView noFilesText = rootView.findViewById(id);
      if (noFilesText == null) {
        break missingId;
      }

      return new DownloadsFragmentBinding((CoordinatorLayout) rootView, constraintLayout,
          downloadsCoordinator, downloadsRecycler, filesProgress, noFilesText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
