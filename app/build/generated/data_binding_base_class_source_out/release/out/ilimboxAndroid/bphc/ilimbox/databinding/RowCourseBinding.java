// Generated by view binder compiler. Do not edit!
package ilimboxAndroid.bphc.ilimbox.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.card.MaterialCardView;
import ilimboxAndroid.bphc.ilimbox.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RowCourseBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialCardView courseCard;

  @NonNull
  public final TextView courseNumber;

  @NonNull
  public final ImageView downloadImage;

  @NonNull
  public final ImageView favoriteButton;

  @NonNull
  public final ImageView imgCourse;

  private RowCourseBinding(@NonNull MaterialCardView rootView, @NonNull MaterialCardView courseCard,
      @NonNull TextView courseNumber, @NonNull ImageView downloadImage,
      @NonNull ImageView favoriteButton, @NonNull ImageView imgCourse) {
    this.rootView = rootView;
    this.courseCard = courseCard;
    this.courseNumber = courseNumber;
    this.downloadImage = downloadImage;
    this.favoriteButton = favoriteButton;
    this.imgCourse = imgCourse;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RowCourseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowCourseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_course, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowCourseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      MaterialCardView courseCard = (MaterialCardView) rootView;

      id = R.id.course_number;
      TextView courseNumber = rootView.findViewById(id);
      if (courseNumber == null) {
        break missingId;
      }

      id = R.id.download_image;
      ImageView downloadImage = rootView.findViewById(id);
      if (downloadImage == null) {
        break missingId;
      }

      id = R.id.favorite_button;
      ImageView favoriteButton = rootView.findViewById(id);
      if (favoriteButton == null) {
        break missingId;
      }

      id = R.id.img_course;
      ImageView imgCourse = rootView.findViewById(id);
      if (imgCourse == null) {
        break missingId;
      }

      return new RowCourseBinding((MaterialCardView) rootView, courseCard, courseNumber,
          downloadImage, favoriteButton, imgCourse);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
